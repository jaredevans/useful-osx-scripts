#################################
#########  CPU related  #########  

# Sort programs by their CPU usage.
alias cpuprograms='ps axo %cpu,comm | sort | grep -v "CPU COM" | grep -v "0.0 " | grep -v "WindowServer"'

# Another method to sort program by their CPU usage, the top 10:
alias cpuhogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

# Command line to put machine to sleep.
alias sleepnow="pmset sleepnow"

########################################
#########  Filesystem related  #########

# grep for a search keyword (case-insensitive) and show 5 lines before and after the keyword.
alias beforeafter='egrep -C 5 -i -e '

# Display human-readable listing of files/directories and sort by smallest to largest.
alias dsize='du -d 1 -h | perl -e'"'"'%h=map{/.\s/;99**(ord$&&7)-$`,$_}`du -h`;die@h{reverse sort%h}'"'"

# Display in ABC order, this directory and all sub-directories with their sizes 
alias dirsize='du -h -d 1 .'

# Display human readable output of available diskspace
alias disksize='df -kh'

# Display list of files from smallest to largest
alias lsize='ls -alSr'

# Display list of files from oldest to newest
alias ldate='ls -ltr'

# Display list of directories, colorized , followed by files. Slightly different than function l() below.
# The directory argument needs to end with '/' and will show full relative path
function ldir() { ls -ald $**/ 2>/dev/null; echo ' ' ; ls -lh $* | grep -v '^d' | egrep -v -e '^total' ; }

# Display list of directories then files in ABC order (do not show anything that's hidden)
function l() { ls -laF $* | grep "^d" | egrep -v -e ' \..*$' ; echo ' ' ; ls -laF $* | grep -v "^d" | egrep -v -e ' \..*$' | egrep -v -e '^total\ '; }

# Display list of hidden directories then hidden files in ABC order
function lh() { ls -laF $* | grep "^d" | egrep -e ' \..*$' ; echo ' ' ; ls -laF $* | grep -v "^d" | egrep -e ' \..*$' | egrep -v -e '^total\ '; }

# Display count of files in current directory
alias llc='echo Total number of files: `ll | wc -l` in `pwd`'

# Remove unnecessary files
alias cleanup="find . -name '*.DS_Store' -type f -ls -delete && find . -name 'Thumbs.db' -type f -ls -delete"

# Update locate database so can find files on system using 'locate'
alias updatelocate='sudo /usr/libexec/locate.updatedb'


# Recursively finding files with names containing keyword
function findfile() { find . -type f -iname '*'$*'*' -ls | awk '{ $1=$2=$3=$4=$5=$6=$8=$9=$10=""; print $0 }' | sed -e 's/^ '*'//' -e 's/ '*'$//'  ;}

# Recursively finding a text string inside files
function findtext() { find . -exec egrep $* \{\} /dev/null \; 2>/dev/null ; }

# Recursively finding a directory with names matching keyword
function finddir () { find . -type d -iname '*'$*'*' -ls ; }

# Display tree view starting with current directory
function tree(){
	pwd
	ls -R | grep ":$" |   \
	sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
}

# Double the playback speed of MP4
function doublespeed () { ffmpeg -i $* -r 100 -vf 'setpts=(1/2)*PTS' -an double.mp4 ; }

# Pre-calculates the gzip compression of a file
function gzipsize(){
	echo $((`gzip -c $1 | wc -c`/1024))"KB"
}

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }


#####################################
#########  Network related  #########

# Show apps currently using network connections.
alias netprograms='sudo lsof -Pn -i4'

# List the name servers in use
alias shownameservers='scutil --dns | grep "nameserver\[[0-9]*\]"'

# Terse list of IPv4 routes in use.
alias showroutes='netstat -rn | grep -v :: | grep -v lo0 | grep -v 224\.0 | grep -v 255\.255\.255\.255 | grep -v 169\.254'

# Display this machine's public IP address.
alias publicip="dig +short myip.opendns.com @resolver1.opendns.com"

# Display this machine's private IP addresses.
alias privateip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"

# Clear out DNS cache
alias flushdns='dscacheutil -flushcache'

# Display only open TCP or UDP sockets
alias lsocku='sudo /usr/sbin/lsof -nP | grep UDP' 
alias lsockt='sudo /usr/sbin/lsof -nP | grep TCP'

# Get detailed info for interface en0 or en1
alias ipinfo0='ipconfig getpacket en0'
alias ipinfo1='ipconfig getpacket en1'

# Display programs that are current listening
alias openports='sudo lsof -i | grep LISTEN'

# Check BGP routes
alias checkbgp='echo " " ; echo "sho ip bgp 8.39.223.0/24" ; echo "sho ip bgp regexp 394756$" ; echo " " ; telnet route-views.routeviews.org'


#####################################
#########  Git related  #########

alias gs='git status'
alias ga='git add .'
alias gc='git commit -m' # requires you to type a commit message with double quotes "blah blah"
alias gp='git push'
